defaults: &defaults
  working_directory: ~/app
  docker:
    - image: circleci/node:10.15.0-browsers

version: 2
jobs:
  build:
    <<: *defaults
    docker:
      - image: circleci/openjdk:11-jdk-browsers
    steps:
      - checkout
      - restore_cache:
          key: gradle-wrapper-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}
      - restore_cache:
          key: gradle-cache-{{ checksum "build.gradle" }}
      - run: ./gradlew build
      - save_cache:
          key: gradle-wrapper-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}
          paths:
            - /home/circleci/.gradle/wrapper
      - save_cache:
          key: gradle-cache-{{ checksum "build.gradle" }}
          paths:
            - /home/circleci/.gradle/caches
      - store_test_results:
          path: build/test-results
      - store_artifacts:
          path: build/reports/tests
      - persist_to_workspace:
          root: .
          paths:
            - build/libs
            - build.gradle
            - Dockerfile
            - run.sh

  build_docker:
    <<: *defaults
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - attach_workspace:
          at: ~/app
      - run:
          name: Build container and publish to docker hub
          command: |
            jar xvf build/libs/community-proxy-*.jar BOOT-INF/classes/META-INF/build-info.properties
            APP_VERSION=$(grep 'build.version=' BOOT-INF/classes/META-INF/build-info.properties | awk -F= '{print $2}')
            rm BOOT-INF/classes/META-INF/build-info.properties

            # Build the image
            docker build --rm=false . \
               --tag "mojdigitalstudio/community-proxy:$APP_VERSION" \
               --label "maintainer=tim.harrison@digital.justice.gov.uk" \
               --label "app.version=$APP_VERSION" \
               --label "build.version=$APP_VERSION" \
               --label "build.number=$CIRCLE_BUILD_NUM" \
               --label "build.url=$CIRCLE_BUILD_URL" \
               --label "build.gitref=$CIRCLE_SHA1"

            # Publish to docker hub for master branch builds
            if [[ "${CIRCLE_BRANCH}" == "master" ]]; then
              docker login -u $DOCKER_USER -p $DOCKER_PASS
              docker push mojdigitalstudio/community-proxy:$APP_VERSION
              docker tag mojdigitalstudio/community-proxy:$APP_VERSION mojdigitalstudio/community-proxy:latest
              docker push mojdigitalstudio/community-proxy:latest
            fi

workflows:
  version: 2
  build-and-test:
    jobs:
      - build:
          filters:
            tags:
              ignore: /.*/
      - build_docker:
          requires:
          - build
          filters:
            branches:
              only: master
